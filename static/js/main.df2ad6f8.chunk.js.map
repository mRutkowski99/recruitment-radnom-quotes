{"version":3,"sources":["styles/GlobalStyle.js","styles/Button.styled.js","components/Button.js","assests/quote-left-svgrepo-com.svg","assests/quote-right-svgrepo-com.svg","styles/QuoteField.styled.js","components/QuoteField.js","styles/Modal.styled.js","components/Modal.js","hooks/useFetch.js","hooks/useRandomQuote.js","hooks/usePrevQuote.js","hooks/useModal.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledButton","styled","button","props","isDisabled","Button","onClick","children","StyledQuoteField","div","quoteLeft","quoteRigth","Quote","p","Author","QuoteField","loading","quote","content","author","slideDown","keyframes","StyledBackdrop","StyledOverlay","Overlay","error","hideModalFn","Backdrop","overlaysElement","document","getElementById","Modal","createPortal","useFetch","useState","isLoading","setIsLoading","setError","fetchData","useCallback","URL","dataTransformFn","a","fetch","response","ok","Error","status","json","data","reducerFn","state","action","previousQuote","currentQuote","quoteIndex","index","useRandomQuote","useReducer","dispatch","getRandomQuote","quotesArr","randomIndex","Math","floor","random","length","generateQuote","usePrevQuote","isPreviousGenerated","displayPrevious","setDisplayPrevious","showPrevious","showCurrent","useModal","isModalVisible","setIsModalVisible","showModal","hideModal","App","useEffect","ReactDOM","render"],"mappings":"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","file":"static/js/main.df2ad6f8.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *, *::after, *::before {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html {\r\n        font-size: 67.5%;\r\n    }\r\n\r\n    body {\r\n        min-width: 100vh;\r\n        font-size: 1.6rem;\r\n        font-family: 'Lato', sans-serif;\r\n        font-weight: 400;\r\n        background-color: #a996d6;\r\n        color: #fff;\r\n        padding: 2rem;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    #root {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 3rem;\r\n    }\r\n\r\n    button {\r\n        font: inherit;\r\n    }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  padding: 1rem 2rem;\r\n  background-color: ${(props) => (props.isDisabled ? \"#333\" : \"#8436ad\")};\r\n  color: #fff;\r\n  box-shadow: 0 0.5rem 1rem rgba(132, 54, 173, 0.4);\r\n  border-radius: 0.5rem;\r\n  cursor: ${(props) => (props.isDisabled ? \"not-allowed\" : \"pointer\")};\r\n  transition: all ease-out 0.2s;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.isDisabled ? \"#333\" : \"#9642c2\")};\r\n  }\r\n\r\n  &:active {\r\n    ${(props) =>\r\n      !props.isDisabled &&\r\n      `transform: translateY(3px);\r\n      box-shadow: 0 0.25rem 0.5rem rgba(132, 54, 173, 0.4);`}\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 5rem;\r\n  }\r\n`;\r\n","import { StyledButton } from \"../styles/Button.styled\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <StyledButton onClick={props.onClick} isDisabled={props.isDisabled}>\r\n      {props.children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/quote-left-svgrepo-com.3dcd228c.svg\";","export default __webpack_public_path__ + \"static/media/quote-right-svgrepo-com.200a6a76.svg\";","import styled from \"styled-components\";\r\nimport quoteLeft from \"../assests/quote-left-svgrepo-com.svg\";\r\nimport quoteRigth from \"../assests/quote-right-svgrepo-com.svg\";\r\n\r\n//Fill color and dimentions of original svgs was changed\r\n\r\nexport const StyledQuoteField = styled.div`\r\n  width: 50rem;\r\n  height: 30rem;\r\n  clip-path: polygon(\r\n    0 0,\r\n    100% 0%,\r\n    100% 75%,\r\n    75% 75%,\r\n    75% 100%,\r\n    50% 75%,\r\n    0% 75%\r\n  );\r\n  background-color: #fff;\r\n  background-image: url(${quoteLeft}), url(${quoteRigth});\r\n  background-position: 3% 3%, 97% 68%;\r\n  background-repeat: no-repeat, no-repeat;\r\n  color: #000;\r\n  padding: 3rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 2rem;\r\n`;\r\n\r\nexport const Quote = styled.p`\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport const Author = styled.p`\r\n  align-self: flex-end;\r\n  font-weight: 700;\r\n  font-style: italic;\r\n`;\r\n","import { StyledQuoteField, Quote, Author } from \"../styles/QuoteField.styled\";\r\n\r\nconst QuoteField = ({ loading, quote }) => {\r\n  let content = <p>Click button above to generate random quote</p>;\r\n  if (loading) content = <p>Loading...</p>;\r\n  if (quote) {\r\n    content = (\r\n      <>\r\n        <Quote>{quote.quote}</Quote>\r\n        <Author>{quote.author}</Author>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <StyledQuoteField>{content}</StyledQuoteField>;\r\n};\r\n\r\nexport default QuoteField;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst slideDown = keyframes`\r\n  0% {\r\n    transform: translateY(-4rem);\r\n    opacity: 0;\r\n  }\r\n\r\n  100% {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const StyledBackdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 10;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledOverlay = styled.div`\r\n  width: 40%;\r\n  padding: 2rem;\r\n  border-radius: 0.5rem;\r\n  background-color: #fff;\r\n  color: #000;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 1.5rem;\r\n  animation: ${slideDown} ease-out 0.4s forwards;\r\n\r\n  button {\r\n    align-self: flex-end;\r\n  }\r\n`;\r\n","import { createPortal } from \"react-dom\";\r\nimport { StyledBackdrop, StyledOverlay } from \"../styles/Modal.styled\";\r\nimport Button from \"./Button\";\r\n\r\nconst Overlay = (props) => {\r\n  return (\r\n    <StyledOverlay>\r\n      <h2>Something went wrong :(</h2>\r\n      <h3>{props.error}</h3>\r\n      <p>Please check your internet connection and try again later</p>\r\n      <Button onClick={props.hideModalFn}>Close</Button>\r\n    </StyledOverlay>\r\n  );\r\n};\r\n\r\nconst Backdrop = (props) => {\r\n  return <StyledBackdrop>{props.children}</StyledBackdrop>;\r\n};\r\n\r\nconst overlaysElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <>\r\n      {createPortal(\r\n        <Backdrop>\r\n          <Overlay error={props.error} hideModalFn={props.hideModalFn} />\r\n        </Backdrop>,\r\n        overlaysElement\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback } from \"react\";\r\n\r\n//Fetching data, handling loading and error state\r\nconst useFetch = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = useCallback(async (URL, dataTransformFn) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(URL);\r\n\r\n      if (!response.ok) throw new Error(response.status);\r\n\r\n      const data = await response.json();\r\n\r\n      dataTransformFn(data);\r\n    } catch (error) {\r\n      setError(`${error}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    fetchData,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from \"react\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst reducerFn = (state, action) => {\r\n  return {\r\n    previousQuote: state.currentQuote,\r\n    quoteIndex: action.index,\r\n    currentQuote: action.quote,\r\n  };\r\n};\r\n\r\nconst URL =\r\n  \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\";\r\n\r\nconst useRandomQuote = () => {\r\n  const [state, dispatch] = useReducer(reducerFn, {\r\n    quoteIndex: null,\r\n    currentQuote: null,\r\n    previousQuote: null,\r\n  });\r\n\r\n  const { isLoading, error, fetchData } = useFetch();\r\n\r\n  //getRandomQuote is passed to fetchData from useFetch as transforming data funtion.\r\n  //It allows it to get ascess to fetched array, drawing new quote and updating state\r\n  const getRandomQuote = (quotesArr) => {\r\n    const randomIndex = Math.floor(Math.random() * quotesArr.length);\r\n\r\n    if (randomIndex === state.quoteIndex) return getRandomQuote(quotesArr);\r\n\r\n    dispatch({ index: randomIndex, quote: quotesArr[randomIndex] });\r\n  };\r\n\r\n  const generateQuote = () => fetchData(URL, getRandomQuote);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    currentQuote: state.currentQuote,\r\n    previousQuote: state.previousQuote,\r\n    generateQuote,\r\n  };\r\n};\r\n\r\nexport default useRandomQuote;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nconst usePrevQuote = (isPreviousGenerated) => {\r\n  const [displayPrevious, setDisplayPrevious] = useState(false);\r\n\r\n  const showPrevious = () => {\r\n    if (!isPreviousGenerated) return;\r\n    setDisplayPrevious(true);\r\n  };\r\n\r\n  const showCurrent = useCallback(() => setDisplayPrevious(false), []);\r\n\r\n  return {\r\n    displayPrevious,\r\n    showPrevious,\r\n    showCurrent,\r\n  };\r\n};\r\n\r\nexport default usePrevQuote;\r\n","import { useState } from \"react\";\r\n\r\nconst useModal = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => setIsModalVisible(true);\r\n  const hideModal = () => setIsModalVisible(false);\r\n\r\n  return {\r\n    isModalVisible,\r\n    showModal,\r\n    hideModal,\r\n  };\r\n};\r\n\r\nexport default useModal;\r\n","import GlobalStyle from \"./styles/GlobalStyle\";\nimport Button from \"./components/Button\";\nimport QuoteField from \"./components/QuoteField\";\nimport Modal from \"./components/Modal\";\n\nimport useRandomQuote from \"./hooks/useRandomQuote\";\nimport usePrevQuote from \"./hooks/usePrevQuote\";\nimport useModal from \"./hooks/useModal\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  //I stored all logic inside custom hooks and let my components be responsible only for presentation\n  //Inside useRandomQuote I use another custom hook (useFetch) which fetches data from API.\n  //useRandomQuote choose random quote, compares quotes and updates them\n  const { isLoading, error, currentQuote, previousQuote, generateQuote } =\n    useRandomQuote();\n\n  //usePrevQuote allows to change displayed quote between current and previous one (if previous quote already exist)\n  const { displayPrevious, showPrevious, showCurrent } = usePrevQuote(\n    !!previousQuote\n  );\n\n  //useModal control displaying modal which informs user about fetching error\n  const { isModalVisible, showModal, hideModal } = useModal();\n\n  //If user generated new quote I want the 'current' one to be displayed\n  useEffect(showCurrent, [currentQuote, showCurrent]);\n\n  //Show modal if fetching error occurs\n  useEffect(() => {\n    if (error) showModal();\n  }, [error]);\n\n  return (\n    <>\n      <GlobalStyle />\n      {isModalVisible && <Modal error={error} hideModalFn={hideModal} />}\n      <h1>Generate random quote</h1>\n      <div>\n        <Button\n          onClick={showPrevious}\n          isDisabled={!previousQuote || displayPrevious}\n        >\n          Show previous quote\n        </Button>\n        <Button onClick={generateQuote}>Generate new quote</Button>\n      </div>\n      <QuoteField\n        quote={displayPrevious ? previousQuote : currentQuote}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}